{"version":3,"sources":["components/NotFound.jsx","components/Group.jsx","components/GroupsList.jsx","api/groups-api.js","components/CreateGroup.jsx","App.jsx","index.js"],"names":["NotFound","React","Group","props","group","createElement","Card","Content","Header","name","Description","description","GroupsList","groups","setGroups","useState","useEffect","async","console","log","response","fetch","concat","process","json","items","getGroups","e","alert","message","getAllGroups","Button","primary","size","className","as","Link","to","Divider","clearing","map","key","id","CreateGroup","setName","setDescription","uploadingGroup","setUploadingGroup","Form","onSubmit","newGroup","reply","method","headers","Content-Type","body","JSON","stringify","newItem","createGroup","Field","placeholder","value","onChange","event","target","loading","type","App","Segment","style","padding","vertical","Grid","container","stackable","verticalAlign","Row","Column","width","BrowserRouter","Menu","Item","Routes","Route","path","exact","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72f59b07.chunk.js","sourcesContent":["import * as React from 'react'\n\nexport function NotFound() {\n  return <h1>Not Found</h1>\n}\n","import React from 'react'\nimport { Card } from 'semantic-ui-react'\n\nexport function Group(props) {\n  const { group } = props\n\n  return (\n    <Card>\n      <Card.Content>\n        <Card.Header>{group.name}</Card.Header>\n        <Card.Description>{group.description}</Card.Description>\n      </Card.Content>\n    </Card>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Card, Divider } from 'semantic-ui-react'\nimport { getGroups } from '../api/groups-api'\nimport { Group } from './Group'\n\nexport function GroupsList() {\n  const [groups, setGroups] = useState([])\n\n  useEffect(() => {\n    async function getAllGroups() {\n      try {\n        const groups = await getGroups()\n        setGroups(groups)\n      } catch (e) {\n        alert(`Failed to fetch groups: ${e.message}`)\n      }\n    }\n    getAllGroups()\n  }, [])\n\n  return (\n    <div>\n      <h1>Groups</h1>\n\n      <Button\n        primary\n        size=\"huge\"\n        className=\"add-button\"\n        as={Link}\n        to=\"/groups/create\"\n      >\n        Create new group\n      </Button>\n\n      <Divider clearing />\n\n      <Card.Group>\n        {groups.map((group) => {\n          return <Group key={group.id} group={group} />\n        })}\n      </Card.Group>\n    </div>\n  )\n}\n","export async function getGroups() {\n  console.log('Fetching groups')\n\n  const response = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/groups`)\n  const result = await response.json()\n\n  return result.items\n}\n\nexport async function createGroup(newGroup) {\n  const reply = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/groups`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name: newGroup.name,\n      description: newGroup.description\n    })\n  })\n  const result = await reply.json()\n  return result.newItem\n}\n","import React, { useState } from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport { createGroup } from '../api/groups-api'\n\nexport function CreateGroup() {\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [uploadingGroup, setUploadingGroup] = useState(false)\n\n  async function submitForm() {\n    try {\n      if (!name || !description) {\n        alert('Name and description should be provided')\n        return\n      }\n\n      setUploadingGroup(true)\n      const group = await createGroup({\n        name: name,\n        description: description\n      })\n\n      console.log('Created description', group)\n\n      alert('Group was created!')\n    } catch (e) {\n      alert('Could not upload an image: ' + e.message)\n    } finally {\n      setUploadingGroup(false)\n    }\n  }\n\n  return (\n    <div>\n      <h1>Upload new group</h1>\n\n      <Form onSubmit={submitForm}>\n        <Form.Field>\n          <label>Name</label>\n          <input\n            placeholder=\"Group name\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Description</label>\n          <input\n            placeholder=\"Group description\"\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n          />\n        </Form.Field>\n        <Button loading={uploadingGroup} type=\"submit\">\n          Create\n        </Button>\n      </Form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter, Link, Route, Routes } from 'react-router-dom'\nimport { Grid, Menu, Segment } from 'semantic-ui-react'\n\nimport { NotFound } from './components/NotFound'\nimport { GroupsList } from './components/GroupsList'\nimport { CreateGroup } from './components/CreateGroup'\n\nexport default function App() {\n  function generateMenu() {\n    return (\n      <Menu>\n        <Menu.Item as={Link} to={'/'}>\n          Home\n        </Menu.Item>\n      </Menu>\n    )\n  }\n\n  return (\n    <div>\n      <Segment style={{ padding: '8em 0em' }} vertical>\n        <Grid container stackable verticalAlign=\"middle\">\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <BrowserRouter>\n                {generateMenu()}\n\n                <Routes>\n                  <Route path=\"/\" exact element={<GroupsList />} />\n                  <Route path=\"/groups/create\" element={<CreateGroup />} />\n\n                  <Route path=\"*\" element={<NotFound />} />\n                </Routes>\n              </BrowserRouter>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}